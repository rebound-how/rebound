---
import PostDate from "@/components/blog/PostDate.astro";
import PostAuthor from "@/components/blog/PostAuthor.astro";
import ArrowLink from "@/components/_ui/ArrowLink.astro";

import { readingTime } from "@/utils/blog";

import { addTrailingSlash } from "@/utils/strings";

export interface Props {
  post: Object;
}

const { post } = Astro.props;
const fm = post.frontmatter;

const url = addTrailingSlash(post.url);
---

<article class="postCard">
  <header class="postCard__header">
    <h2 class="postCard__title">
      <a href={url}>
        {fm.title}
      </a>
    </h2>
    <div class="postCard__category">
      {fm.category}
    </div>
  </header>
  <div class="postCard__meta">
    <div class="postCard__author">
      <PostAuthor post={fm} />
    </div>
    <div class="postCard__date">
      Published<br />
      <strong><PostDate date={fm.date} /></strong>
    </div>
    <div class="postCard__readingTime">
      Reading time<br />
      <strong>{} minutes</strong>
    </div>
  </div>
  <div class="postCard__content">
    <p class="postCard__description">
      {fm.description}
    </p>
    <p class="postCard__readMore">
      <ArrowLink href={post.url}>Read more</ArrowLink>
    </p>
  </div>
  <div class="postCard__image">
    <img
      src={fm.featured_image.src}
      alt={fm.featured_image.alt}
      height="260"
      width="340"
      loading="lazy"
    />
  </div>
</article>

<style lang="scss">
  .postCard {
    display: grid;
    grid-template-columns: 1fr;
    gap: var(--space-small);

    @media (min-width: 50em) {
      grid-template-columns: repeat(2, 1fr);
    }

    &__header {
      display: flex;
      flex-direction: column-reverse;
    }

    &__title {
      a {
        color: var(--text-color-bright);

        &:hover {
          text-decoration: underline;
        }
      }
    }

    &__category {
      color: var(--pink-500);
      font-weight: 500;
    }

    &__meta {
      display: flex;
      flex-direction: column;
      gap: var(--space-medium);

      @media (min-width: 40em) and (max-width: 50em), (min-width: 70em) {
        align-self: end;
        flex-direction: row;
        > * + * {
          padding-left: var(--space-small);

          border-left: 0.1rem solid var(--yellow-600);
        }
      }
    }

    &__readingTime {
      display: none;
      // Hidden until I find a way to pass Markdown source as a Prop
      // This used to work 0.24 but doesn't in 0.26, and is needed
      // to compute reading time.
    }

    &__content {
      display: flex;
      flex-direction: column;
      max-width: 50ch;
    }

    &__readMore {
      color: var(--pink-500);
    }

    &__image {
      max-height: 40rem;
      overflow: hidden;

      border-radius: var(--border-radius-l);
      box-shadow: var(--box-shadow-diffuse);
      img {
        position: relative;
        top: 50%;
        left: 50%;

        display: block;
        height: auto;
        width: 100%;

        object-fit: cover;
        transform: translate(-50%, -50%);
      }
    }
  }
</style>
