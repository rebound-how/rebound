---
import Prism from "prismjs";
import loadLanguages from "prismjs/components/index.js";

const exampleExtension: string = `# EKS Actions for the Chaos Toolkit AWS extension

from typing import Any, Dict

from chaoslib.types import Configuration, Secrets
from logzero import logger

from chaosaws import aws_client
from chaosaws.types import AWSResponse

__all__ = ["create_cluster", "delete_cluster"]


def create_cluster(
    name: str,
    role_arn: str,
    vpc_config: Dict[str, Any],
    version: str = None,
    configuration: Configuration = None,
    secrets: Secrets = None,
) -> AWSResponse:
    """
    Create a new EKS cluster.
    """
    client = aws_client("eks", configuration, secrets)
    logger.debug(f"Creating EKS cluster: {name}")
    return client.create_cluster(
        name=name, version=version, roleArn=role_arn, resourcesVpcConfig=vpc_config
    )


def delete_cluster(
    name: str = None, configuration: Configuration = None, secrets: Secrets = None
) -> AWSResponse:
    """
    Delete the given EKS cluster.
    """
    client = aws_client("eks", configuration, secrets)
    logger.debug(f"Deleting EKS cluster: {name}")
    return client.delete_cluster(name=name)`;

loadLanguages(["python"]);
const grammar = Prism.languages["python"];
let highlighted = exampleExtension;
if (grammar) {
  highlighted = Prism.highlight(exampleExtension, grammar, "python");
}
---

<pre
  class="chaosPythonCode language-python">
<code class="language-python" set:html="highlighted"></code>
</pre>

<style lang="scss" is:global>
  .chaosPythonCode {
    position: relative;

    height: 100%;
    overflow-y: auto;
    padding: var(--space-small);

    display: block;

    background-color: var(--pink-800);
    border-radius: var(--border-radius-m);

    font-size: 1.2rem;
    text-align: left;
    white-space: pre;
    word-spacing: normal;
    word-break: normal;
    word-wrap: normal;
    line-height: 1.5;
    -moz-tab-size: 4;
    -o-tab-size: 4;
    tab-size: 4;
    -webkit-hyphens: none;
    -moz-hyphens: none;
    -ms-hyphens: none;
    hyphens: none;

    // transform: translateY(-50%);
  }

  /* Adapted from PrismJS 1.29.0
https://prismjs.com/download.html#themes=prism-okaidia&languages=markup+css+clike+javascript+python */
  .token.cdata,
  .token.comment,
  .token.doctype,
  .token.prolog {
    color: #8292a2;
  }
  .token.punctuation {
    color: #f8f8f2;
  }
  .token.namespace {
    opacity: 0.7;
  }
  .token.constant,
  .token.deleted,
  .token.property,
  .token.symbol,
  .token.tag {
    color: #f92672;
  }
  .token.boolean,
  .token.number {
    color: #ae81ff;
  }
  .token.attr-name,
  .token.builtin,
  .token.char,
  .token.inserted,
  .token.selector,
  .token.string {
    color: #a6e22e;
  }
  .language-css .token.string,
  .style .token.string,
  .token.entity,
  .token.operator,
  .token.url,
  .token.variable {
    color: #f8f8f2;
  }
  .token.atrule,
  .token.attr-value,
  .token.class-name,
  .token.function {
    color: #e6db74;
  }
  .token.keyword {
    color: #66d9ef;
  }
  .token.important,
  .token.regex {
    color: #fd971f;
  }
  .token.bold,
  .token.important {
    font-weight: 700;
  }
  .token.italic {
    font-style: italic;
  }
  .token.entity {
    cursor: help;
  }
</style>
