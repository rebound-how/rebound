:root>* {
    --md-primary-fg-color: hsl(214, 67%, 14%);
    --md-primary-fg-color--light: hsl(214, 67%, 14%);
    --md-primary-fg-color--dark: hsl(214, 67%, 14%);

    --md-accent-fg-color: hsl(45, 92%, 47%);
    --md-accent-fg-color--light: hsl(45, 92%, 47%);
    --md-accent-fg-color--dark: hsl(45, 92%, 47%);

    --md-footer-bg-color: hsl(214, 67%, 14%);

    --border-radius-s: 0.4rem;
    --border-radius-m: 0.6rem;
    --border-radius-l: 1rem;

    --box-shadow-sharp: 0 0.1rem 0.3rem rgba(0, 0, 0, 0.025),
        0 0.2rem 0.4rem rgba(0, 0, 0, 0.05), 0 0.8rem 0.8rem rgba(0, 0, 0, 0.08),
        0 0.16rem 0.32rem rgba(0, 0, 0, 0.1);

    --box-shadow-diffuse: 0 0.1rem 0.3rem rgba(0, 0, 0, 0.025),
        0 0.2rem 0.4rem rgba(0, 0, 0, 0.05), 0 0.8rem 0.8rem rgba(0, 0, 0, 0.08),
        0 0.8rem 2.4rem rgba(0, 0, 0, 0.1);

    --color-fast: #0095ff;
    --color-slow: #e6af0a;
    --node-fill: #ffffff;
    --node-stroke: #333333;
    --label-color: #333333;
    --background: #fff;
}


@font-face {
    font-family: "Lexend Variable";
    font-style: normal;
    font-display: swap;
    font-weight: 100 900;
    src: url(@fontsource-variable/lexend/files/lexend-latin-wght-normal.woff2) format("woff2-variations");
    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA,
        U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193,
        U+2212, U+2215, U+FEFF, U+FFFD;
}

.logo {
    font-weight: 900;
    font-size: 124px;
    line-height: 1;
    color: var(--md-primary-fg-color);
    filter: url(#scratch);
    display: inline-block;
    transform: skew(-5deg);
}

.logo-dot {
    color: var(--md-accent-fg-color);
    font-size: 40px;
    vertical-align: baseline !important;
    padding-left: 10px;
    transform: translateY(3px);
}

aside.md-source-file {
    display: none;
}

div.md-search {
    display: none;
}

[dir="ltr"] .md-header__title {
    margin-left: 0;
}

.md-header {
    background-color: #fff;
    color: #000;
}

.md-tabs {
    background-color: var(--md-primary-fg-color--light);
    box-shadow: 0 0 .2rem #0000001a, 0 .2rem .4rem #0003;
    transition: transform .25s cubic-bezier(.1, .7, .1, 1), box-shadow .25s;
}


.md-typeset [type="checkbox"]:checked+.task-list-indicator::before {
    background-color: #3F7D58;
}

.md-header__button {
    padding: 0;
}

.md-header__button.md-logo {
    padding: 0;

}

.md-search {
    text-align: end;

}

a.md-source {
    text-align: end;
}

.rounded {
    border-radius: 2em !important;
}

.landing-hero {
    width: 100%;
}

.hero {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    padding: 4rem 1rem;
    padding-bottom: 0;
}

.hero__content {
    max-width: 600px;
    width: 100%;
}

.hero__content .logo {
    margin-bottom: .5rem;
}


.landing li {
    background-color: #fff;
}

.features-container {
    display: grid;
    row-gap: 200px;
    padding-top: 180px;
    padding-bottom: 80px;
}

.feat {
    position: relative;
    display: grid;
    grid-template-rows: 1fr;
    gap: 0;
}

@media (min-width: 480px) {

    /* odd: media left, text right */
    .feat:nth-of-type(odd) {
        grid-template-columns: 70% 30%;
        grid-template-areas: "media text";
        gap: .8rem;
    }

    /* even: text left, media right */
    .feat:nth-of-type(even) {
        grid-template-columns: 30% 70%;
        grid-template-areas: "text media";
        gap: .8rem;
    }
}

.media {
    grid-area: media;
    background-image: #f8ebe3;

    display: flex;
    justify-content: center;
    align-items: center;
    padding-top: 1.1rem;
}

.text {
    grid-area: text;
}

.media img {
    width: 100%;
    max-width: 100%;
    display: block;
    box-shadow: var(--box-shadow-diffuse);
    border-radius: var(--border-radius-m);
}

.text {
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
}

.subtext {
    color: hsl(205, 100%, 50%);
}

.carousel-img {
    max-width: 100%;
    display: block;
    border-radius: var(--border-radius-s);
    opacity: 1;
    transition: opacity 0.2s ease-in-out;
    will-change: opacity transform;
}

.menu {
    display: flex;
    flex-direction: column;
    height: auto !important;
    max-height: none !important;
    overflow-y: visible !important;
}

.menu-heading {
    margin: 0 0 1rem;
    font-size: 1.25rem;
    color: #333;
}

.menu-list {
    list-style: none;
    margin: 0;
    padding: 0;
    flex-grow: 1;
    max-height: none !important;
    overflow: visible !important;
}

.menu-item {
    cursor: pointer;
    display: flex;
    flex-direction: column;
    will-change: opacity transform;
    transition: opacity 0.3s ease-in-out;
    position: relative;
    margin-left: 0 !important;
    padding: 10px;
}

.menu-item.active::before {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    width: 4px;
    background: hsl(205, 100%, 50%);
}

.menu-item span {
    padding-left: 20px;
}

.menu-list:hover .menu-item:not(.active) {
    opacity: 0.4;
}


.menu-heading {
    margin: 0 !important;
}


@media (max-width: 768px) {
    .feat {
        grid-template-columns: 1fr;
        gap: 20px;
        padding: 30px 15px;
    }

    .feat .menu {
        align-items: flex-start;
    }

    .menu-list {
        max-height: 200px;
        overflow-y: auto;
    }

}

@media (max-width: 480px) {
    .features-container {
        row-gap: 20px;
    }

    .feat {
        grid-template-columns: 1fr;
        gap: 20px;
    }

    .feat .media {
        display: none !important;
    }

    .feat .menu {
        width: 100%;
        max-width: 100%;
        max-height: calc(100vh - 40px) !important;
        overflow-y: auto;
    }
}

.tellme {
    display: grid;
    place-items: center;
    /* shorthand for centering */
}

.why {
    display: grid;
    grid-template-rows: auto auto;
    width: 100%;
}

.tagline {
    text-align: center;
    padding-top: 70px;
}

.values {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 20px;
    justify-items: center;
    align-items: center;
    text-align: center;
}

.values h3 span {
    color: hsl(45, 92%, 47%);
}

@media (min-width: 480px) {
    .md-main {
        padding-bottom: 450px;
    }

    .md-main::after {
        content: "";
        position: absolute;
        left: 0;
        bottom: 0;
        width: 100%;
        height: 540px;
        background: url("/assets/footer.svg") no-repeat bottom center;
        background-size: 100% auto;
        pointer-events: none;
        z-index: 1;
    }

    .md-footer {
        position: relative;
        z-index: 2;
    }
}

.subhero {
    margin-top: 0;
}


.subhero #_1 {
    display: none;
}


.animation-container {
    position: relative;
    aspect-ratio: 4 / 1;
    background: #ffffff;
    overflow: visible;
    box-sizing: border-box;
}

.phase-svg {
    position: absolute;
    top: 0;
    left: 0;
    width: calc(100% - 120px);
    height: calc(100% - 40px) !important;
    margin: 20px 60px;
    opacity: 0;
    transform: translateX(100%);
    animation: slide 16s ease-in-out infinite;
}

.phase-1 {
    animation-delay: 0s;
}

.phase-2 {
    animation-delay: 4s;
}

.phase-3 {
    animation-delay: 8s;
}

.phase-4 {
    animation-delay: 12s;
}

@keyframes slide {

    0%,
    22% {
        opacity: 1;
        transform: translateX(0);
    }

    25%,
    100% {
        opacity: 0;
        transform: translateX(-100%);
    }
}

.node {
    fill: var(--node-fill);
    stroke: var(--node-stroke);
    stroke-width: 3;
    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2));
}

.label {
    font: 700 14px 'Lexend Variable', sans-serif;
    fill: var(--label-color);
}

line {
    stroke-width: 4;
    stroke-dasharray: 5, 5;
}

.thin {
    stroke-width: 1;
}

.label tspan {
    font: 400 10px 'Lexend Variable', sans-serif;
    fill: hsl(45, 92%, 47%);
}

.pulse {
    fill: var(--color-fast);
    stroke: var(--color-fast);
    stroke-width: 2;
    opacity: 0.6;
    transform-box: fill-box;
    transform-origin: center;
    animation: pulse 2s ease-out infinite;
}

@keyframes pulse {

    0%,
    100% {
        transform: scale(1);
        opacity: 0.6;
    }

    50% {
        transform: scale(1.4);
        opacity: 0;
    }
}

.proxy {
    stroke: var(--color-fast);
}