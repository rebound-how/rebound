title: Single high-latency spike (client ingress)
description: A single 800ms spike simulates jitter buffer underrun / GC pause on client network stack.
items:
- call:
    method: GET
    url: http://localhost:8000/
    meta:
      operation_id: read_root__get
  context:
    upstreams:
    - http://localhost:8000/
    faults:
    - type: latency
      side: client
      mean: 800.0
      stddev: 100.0
      direction: ingress
    strategy: null
  expect:
    status: 200
---
title: Stair-step latency growth (5 x 100 ms)
description: Latency increases 100 ms per call; emulate slow congestion build-up or head-of-line blocking.
items:
- call:
    method: GET
    url: http://localhost:8000/
    meta:
      operation_id: read_root__get
  context:
    upstreams:
    - http://localhost:8000/
    faults:
    - type: latency
      side: client
      mean: 100.0
      stddev: 30.0
      direction: ingress
    strategy:
      mode: repeat
      step: 100.0
      count: 5
      add_baseline_call: true
  expect:
    status: 200
---
title: Periodic 150-250 ms latency pulses during load
description: Three latency bursts at 10-40-70% of a 10s window; good for P95 drift tracking.
items:
- call:
    method: GET
    url: http://localhost:8000/
    meta:
      operation_id: read_root__get
  context:
    upstreams:
    - http://localhost:8000/
    faults:
    - type: latency
      mean: 150.0
      period: start:10%,duration:15%
    - type: latency
      mean: 250.0
      period: start:40%,duration:15%
    - type: latency
      mean: 150.0
      period: start:70%,duration:15%
    strategy:
      mode: load
      duration: 10s
      clients: 3
      rps: 2
    slo:
    - slo_type: latency
      title: P95 < 300ms
      objective: 95.0
      threshold: 300.0
    - slo_type: error
      title: P99 < 1% errors
      objective: 99.0
      threshold: 1.0
---
title: 5% packet loss for 4s
description: Simulates flaky Wi-Fi or cellular interference.
items:
- call:
    method: GET
    url: http://localhost:8000/
    timeout: 500
    meta:
      operation_id: read_root__get
  context:
    upstreams:
    - http://localhost:8000/
    faults:
    - type: packetloss
      direction: egress
      period: start:30%,duration:40%
    strategy: null
  expect:
    status: 200
    response_time_under: 100.0
---
title: High jitter (±80ms @ 8Hz)
description: Emulates bursty uplink, measuring buffering robustness.
items:
- call:
    method: GET
    url: http://localhost:8000/
    meta:
      operation_id: read_root__get
  context:
    upstreams:
    - http://localhost:8000/
    faults:
    - type: jitter
      amplitude: 80.0
      frequency: 8.0
      direction: ingress
      side: server
    strategy: null
  expect:
    status: 200
---
title: 512 KBps bandwidth cap
description: Models throttled 3G link; validates handling of large payloads.
items:
- call:
    method: GET
    url: http://localhost:8000/
    meta:
      operation_id: read_root__get
  context:
    upstreams:
    - http://localhost:8000/
    faults:
    - type: bandwidth
      rate: 512
      unit: KBps
      direction: ingress
    strategy:
      mode: load
      duration: 15s
      clients: 2
      rps: 1
  expect:
    status: 200
---
title: Random 500 errors (5% of calls)
description: Backend flakiness under load; ensures retry / circuit-breaker logic.
items:
- call:
    method: GET
    url: http://localhost:8000/
    meta:
      operation_id: read_root__get
  context:
    upstreams:
    - http://localhost:8000/
    faults:
    - type: httperror
      status_code: 500
      probability: 0.05
    strategy:
      mode: load
      duration: 8s
      clients: 5
      rps: 4
  expect:
    response_time_under: 100.0
---
title: Full black-hole for 1 s
description: Simulates router drop / Pod eviction causing 100% packet loss for a second.
items:
- call:
    method: GET
    url: http://localhost:8000/
    timeout: 500
    meta:
      operation_id: read_root__get
  context:
    upstreams:
    - http://localhost:8000/
    faults:
    - type: blackhole
      direction: egress
      period: start:45%,duration:10%
    strategy:
      mode: load
      duration: 10s
      clients: 2
      rps: 3
---
title: Single high-latency spike (client ingress)
description: A single 800ms spike simulates jitter buffer underrun / GC pause on client network stack.
items:
- call:
    method: GET
    url: http://localhost:8000/users/{user_id}
    meta:
      operation_id: read_user_users__user_id__get
  context:
    upstreams:
    - http://localhost:8000/users/{user_id}
    faults:
    - type: latency
      side: client
      mean: 800.0
      stddev: 100.0
      direction: ingress
    strategy: null
  expect:
    status: 200
---
title: Stair-step latency growth (5 x 100 ms)
description: Latency increases 100 ms per call; emulate slow congestion build-up or head-of-line blocking.
items:
- call:
    method: GET
    url: http://localhost:8000/users/{user_id}
    meta:
      operation_id: read_user_users__user_id__get
  context:
    upstreams:
    - http://localhost:8000/users/{user_id}
    faults:
    - type: latency
      side: client
      mean: 100.0
      stddev: 30.0
      direction: ingress
    strategy:
      mode: repeat
      step: 100.0
      count: 5
      add_baseline_call: true
  expect:
    status: 200
---
title: Periodic 150-250 ms latency pulses during load
description: Three latency bursts at 10-40-70% of a 10s window; good for P95 drift tracking.
items:
- call:
    method: GET
    url: http://localhost:8000/users/{user_id}
    meta:
      operation_id: read_user_users__user_id__get
  context:
    upstreams:
    - http://localhost:8000/users/{user_id}
    faults:
    - type: latency
      mean: 150.0
      period: start:10%,duration:15%
    - type: latency
      mean: 250.0
      period: start:40%,duration:15%
    - type: latency
      mean: 150.0
      period: start:70%,duration:15%
    strategy:
      mode: load
      duration: 10s
      clients: 3
      rps: 2
    slo:
    - slo_type: latency
      title: P95 < 300ms
      objective: 95.0
      threshold: 300.0
    - slo_type: error
      title: P99 < 1% errors
      objective: 99.0
      threshold: 1.0
---
title: 5% packet loss for 4s
description: Simulates flaky Wi-Fi or cellular interference.
items:
- call:
    method: GET
    url: http://localhost:8000/users/{user_id}
    timeout: 500
    meta:
      operation_id: read_user_users__user_id__get
  context:
    upstreams:
    - http://localhost:8000/users/{user_id}
    faults:
    - type: packetloss
      direction: egress
      period: start:30%,duration:40%
    strategy: null
  expect:
    status: 200
    response_time_under: 100.0
---
title: High jitter (±80ms @ 8Hz)
description: Emulates bursty uplink, measuring buffering robustness.
items:
- call:
    method: GET
    url: http://localhost:8000/users/{user_id}
    meta:
      operation_id: read_user_users__user_id__get
  context:
    upstreams:
    - http://localhost:8000/users/{user_id}
    faults:
    - type: jitter
      amplitude: 80.0
      frequency: 8.0
      direction: ingress
      side: server
    strategy: null
  expect:
    status: 200
---
title: 512 KBps bandwidth cap
description: Models throttled 3G link; validates handling of large payloads.
items:
- call:
    method: GET
    url: http://localhost:8000/users/{user_id}
    meta:
      operation_id: read_user_users__user_id__get
  context:
    upstreams:
    - http://localhost:8000/users/{user_id}
    faults:
    - type: bandwidth
      rate: 512
      unit: KBps
      direction: ingress
    strategy:
      mode: load
      duration: 15s
      clients: 2
      rps: 1
  expect:
    status: 200
---
title: Random 500 errors (5% of calls)
description: Backend flakiness under load; ensures retry / circuit-breaker logic.
items:
- call:
    method: GET
    url: http://localhost:8000/users/{user_id}
    meta:
      operation_id: read_user_users__user_id__get
  context:
    upstreams:
    - http://localhost:8000/users/{user_id}
    faults:
    - type: httperror
      status_code: 500
      probability: 0.05
    strategy:
      mode: load
      duration: 8s
      clients: 5
      rps: 4
  expect:
    response_time_under: 100.0
---
title: Full black-hole for 1 s
description: Simulates router drop / Pod eviction causing 100% packet loss for a second.
items:
- call:
    method: GET
    url: http://localhost:8000/users/{user_id}
    timeout: 500
    meta:
      operation_id: read_user_users__user_id__get
  context:
    upstreams:
    - http://localhost:8000/users/{user_id}
    faults:
    - type: blackhole
      direction: egress
      period: start:45%,duration:10%
    strategy:
      mode: load
      duration: 10s
      clients: 2
      rps: 3
